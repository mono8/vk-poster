{"version":3,"sources":["components/Group/Group.module.sass","components/SendingForm/SendingForm.module.sass","components/Token/Token.module.sass","components/Groups/Groups.module.sass","store/groups/actions.ts","components/Group/Group.tsx","components/Groups/Groups.tsx","store/status/actions.ts","consts.ts","components/Message/Message.tsx","components/SendingForm/SendingForm.tsx","components/Token/Token.tsx","store/user/actions.ts","components/Account/Account.tsx","App.tsx","serviceWorker.ts","store/user/reducers.ts","store/status/reducers.ts","store/index.ts","store/groups/reducers.ts","index.tsx"],"names":["module","exports","uncheckAllGroups","type","useStyles","makeStyles","theme","isChecked","backgroundColor","success","error","connect","state","successful","status","rejected","toggleGroup","id","payload","props","group","handleChange","classes","Paper","className","clsx","styles","wrapper","checked","includes","Checkbox","onChange","color","inputProps","groupName","onClick","name","href","screen_name","link","target","image","src","photo_50","root","margin","showReset","Boolean","length","groups","token","user","checkAllGroups","setGroups","resetStatuses","useState","shouldCheckAll","setShouldCheckAll","useEffect","jsonp","undefined","err","data","console","log","response","items","map","Button","variant","key","textField","width","Message","message","TextField","label","multiline","rows","rowsMax","value","requestSuccess","requestError","loading","setLoading","localStorage","getItem","setMessage","photoUrl","setPhotoUrl","setItem","handleSubmit","e","a","preventDefault","interval","Promise","all","filter","resolve","reject","setTimeout","sendMessage","then","v","onSuccess","onError","form","photoInput","fullWidth","disabled","changeToken","container","accessToken","URL","replace","searchParams","get","surname","changeSurname","changeName","first_name","last_name","App","Container","maxWidth","window","location","hostname","match","rootReducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e77e1b75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Group_wrapper__17gz7\",\"link\":\"Group_link__Lsc18\",\"groupName\":\"Group_groupName__4g0ea\",\"image\":\"Group_image__2fvKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoInput\":\"SendingForm_photoInput__2QH4b\",\"form\":\"SendingForm_form__1Jg2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Token_container__3nGR6\",\"label\":\"Token_label__1_3FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Groups_wrapper__1oPfr\"};","import { GroupsType } from \"./types\";\n\nexport const setGroups = (groups: GroupsType) => {\n  return <const>{\n    type: \"[groups] Set groups\",\n    payload: {\n      groups,\n    },\n  };\n};\n\nexport const toggleGroup = (id: number) => {\n  return <const>{\n    type: \"[groups] Toggle group\",\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const checkAllGroups = () => {\n  return <const>{\n    type: \"[groups] Check all groups\",\n  };\n};\n\nexport const uncheckAllGroups = () => {\n  return <const>{\n    type: \"[groups] Uncheck all groups\",\n  };\n};\n\n","import React from \"react\";\nimport { Checkbox, Paper, makeStyles } from \"@material-ui/core\";\n\nimport styles from \"./Group.module.sass\";\nimport { GroupType } from \"../../store/groups/types\";\nimport { toggleGroup } from \"../../store/groups/actions\";\nimport { connect } from \"react-redux\";\nimport { AppStateType } from \"../../store\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  isChecked: {\n    backgroundColor: \"#b3e5fc\",\n  },\n  success: {\n    backgroundColor: \"#b2ff59\",\n  },\n  error: {\n    backgroundColor: \"#ff6e40\",\n  },\n}));\n\ntype PropsType = {\n  group: GroupType;\n  toggleGroup: typeof toggleGroup;\n  successful: number[];\n  rejected: number[];\n};\n\nconst Group: React.FC<PropsType> = props => {\n  const { group, toggleGroup, successful, rejected } = props;\n  const handleChange = () => {\n    toggleGroup(group.id);\n  };\n  const classes = useStyles();\n  return (\n    <Paper\n      className={clsx(\n        styles.wrapper,\n        group.checked && classes.isChecked,\n        successful.includes(group.id) && classes.success,\n        rejected.includes(group.id) && classes.error,\n      )}\n    >\n      <Checkbox\n        checked={group.checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{\n          \"aria-label\": \"secondary checkbox\",\n        }}\n      />\n      <span className={styles.groupName} onClick={handleChange}>\n        {group.name}\n      </span>\n      <a\n        href={\"https://vk.com/\" + group.screen_name}\n        className={styles.link}\n        target=\"_blank\"\n      >\n        <img className={styles.image} src={group.photo_50} />\n      </a>\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    successful: state.status.success,\n    rejected: state.status.error,\n  };\n};\n\nexport default connect(mapStateToProps, { toggleGroup })(Group);\n","import React, { useState, useEffect } from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { Group } from \"../Group\";\nimport { AppStateType } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { GroupsType, GroupType } from \"../../store/groups/types\";\nimport {\n  checkAllGroups,\n  uncheckAllGroups,\n  setGroups,\n} from \"../../store/groups/actions\";\nimport styles from \"./Groups.module.sass\";\nimport jsonp from \"jsonp\";\nimport { VERSION } from \"../../consts\";\nimport { resetStatuses } from \"../../store/status/actions\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"16px 16px 16px 0\",\n  },\n}));\n\ntype PropsType = {\n  groups: GroupsType;\n  checkAllGroups: typeof checkAllGroups;\n  uncheckAllGroups: typeof uncheckAllGroups;\n  setGroups: typeof setGroups;\n  token: string;\n  resetStatuses: typeof resetStatuses;\n  showReset: boolean;\n};\n\nconst Groups: React.FC<PropsType> = props => {\n  const {\n    groups,\n    checkAllGroups,\n    uncheckAllGroups,\n    setGroups,\n    token,\n    resetStatuses,\n    showReset,\n  } = props;\n  const [shouldCheckAll, setShouldCheckAll] = useState(true);\n  const handleClick = () => {\n    shouldCheckAll ? checkAllGroups() : uncheckAllGroups();\n    setShouldCheckAll(!shouldCheckAll);\n  };\n  const classes = useStyles();\n\n  useEffect(() => {\n    token &&\n      jsonp(\n        `https://api.vk.com/method/groups.get?fields=can_post&count&extended=1&access_token=${token}&v=${VERSION}`,\n        undefined,\n        (err, data) => {\n          if (err) {\n            console.log(err);\n          } else {\n            setGroups(\n              data.response.items.map((group: GroupType) => ({\n                ...group,\n                checked: false,\n              })),\n            );\n          }\n        },\n      );\n  }, [token]);\n\n  return groups.length ? (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={handleClick}\n        className={classes.root}\n      >\n        Поставить/убрать все галки\n      </Button>\n      {showReset && (\n        <Button\n          variant=\"contained\"\n          onClick={resetStatuses}\n          className={clsx(classes.root)}\n        >\n          Сбросить статусы отправки\n        </Button>\n      )}\n      <div className={styles.wrapper}>\n        {groups.map((group: GroupType) => (\n          <Group key={group.id} group={group} />\n        ))}\n      </div>\n    </>\n  ) : null;\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n  const showReset = Boolean(\n    state.status.success.length || state.status.error.length,\n  );\n  return {\n    groups: state.groups,\n    token: state.user.token,\n    showReset,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  checkAllGroups,\n  uncheckAllGroups,\n  setGroups,\n  resetStatuses,\n})(Groups);\n","export const requestSuccess = (id: number) => {\n  return <const>{\n    type: \"[status] Success\",\n    payload: { id },\n  };\n};\n\nexport const requestError = (id: number) => {\n  return <const>{\n    type: \"[status] Error\",\n    payload: { id },\n  };\n};\n\nexport const resetStatuses = () => {\n  return <const>{\n    type: '[status] Reset all',\n  }\n}\n","export const VERSION = 5.103;\n","import React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\ntype PropsType = {\n  message: string;\n  onChange: (x: any) => void;\n};\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    width: 400,\n  },\n}));\n\nconst Message: React.FC<PropsType> = props => {\n  const { message, onChange } = props;\n  const classes = useStyles();\n  return (\n    <TextField\n      label=\"Шапка\"\n      multiline\n      rows={10}\n      rowsMax={40}\n      className={classes.textField}\n      margin=\"normal\"\n      variant=\"outlined\"\n      value={message}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport styles from \"./SendingForm.module.sass\";\nimport jsonp from \"jsonp\";\nimport { AppStateType } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { VERSION } from \"../../consts\";\nimport { GroupType, GroupsType } from \"../../store/groups/types\";\nimport { Message } from \"../Message\";\nimport { requestSuccess, requestError } from \"../../store/status/actions\";\nimport { uncheckAllGroups } from \"../../store/groups/actions\";\n\nconst reflect = (p: Promise<any>) =>\n  p.then(\n    v => ({ v, status: \"fulfilled\" }),\n    e => ({ e, status: \"rejected\" }),\n  );\n\ntype PropsType = {\n  token: string;\n  groups: GroupsType;\n  requestSuccess: typeof requestSuccess;\n  requestError: typeof requestError;\n  uncheckAllGroups: typeof uncheckAllGroups;\n};\n\nconst SendingForm: React.FC<PropsType> = props => {\n  const {\n    token,\n    groups,\n    requestSuccess,\n    requestError,\n    uncheckAllGroups,\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(localStorage.getItem(\"message\") || \"\");\n  const [photoUrl, setPhotoUrl] = useState(localStorage.getItem(\"photo\") || \"\");\n\n  const handleMessageChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setMessage(e.target.value);\n  };\n  const handlePhotoUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhotoUrl(e.target.value);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"message\", message);\n    return () => {};\n  }, [message]);\n  useEffect(() => {\n    localStorage.setItem(\"photo\", photoUrl);\n    return () => {};\n  }, [photoUrl]);\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    let interval = 2;\n    if (message) {\n      setLoading(true);\n      // uncheckAllGroups();\n      await Promise.all(\n        groups\n          .filter(group => group.checked)\n          .map(group => {\n            interval += 2;\n            return reflect(\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  sendMessage(group, resolve, reject);\n                }, 500 * interval);\n              }),\n            );\n          }),\n      );\n      setLoading(false);\n    }\n  };\n\n  const sendMessage = (\n    group: GroupType,\n    onSuccess: Function,\n    onError: Function,\n  ) => {\n    jsonp(\n      `https://api.vk.com/method/wall.post?owner_id=-${group.id}&message=${message}&attachments=${photoUrl}&access_token=${token}&v=${VERSION}`,\n      undefined,\n      (err, data) => {\n        if (err) {\n          console.log(`group ${group.id} ` + err.message);\n          requestError(group.id);\n          onError();\n        } else {\n          requestSuccess(group.id);\n          onSuccess();\n        }\n      },\n    );\n  };\n\n  return (\n    <form className={styles.form}>\n      <Message message={message} onChange={handleMessageChange} />\n      <div className={styles.photoInput}>\n        <TextField\n          fullWidth\n          label=\"Фото\"\n          variant=\"outlined\"\n          value={photoUrl}\n          onChange={handlePhotoUrlChange}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        disabled={loading}\n        onClick={handleSubmit}\n        type=\"submit\"\n      >\n        {loading ? \"Идет отправка...\" : \"Разослать\"}\n      </Button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    token: state.user.token,\n    groups: state.groups,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  requestSuccess,\n  requestError,\n  uncheckAllGroups,\n})(SendingForm);\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styles from \"./Token.module.sass\";\nimport { VERSION } from \"../../consts\";\nimport { connect } from \"react-redux\";\nimport { AppStateType } from \"../../store\";\nimport { changeToken } from \"../../store/user/actions\";\n\ntype PropsType = {\n  changeToken: typeof changeToken;\n  token: string;\n};\n\nconst Token: React.FC<PropsType> = props => {\n  const { changeToken, token } = props;\n\n  const getToken = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.value) return;\n    try {\n      const url = new URL(e.target.value.replace(\"#\", \"?\"));\n      const accessToken = url.searchParams.get(\"access_token\");\n      if (accessToken) changeToken(accessToken);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <a\n        href={`https://oauth.vk.com/authorize?client_id=7218002&redirect_uri=https://oauth.vk.com/blank.html&display=popup&scope=wall,offline,groups&response_type=token&v=${VERSION}`}\n        className={styles.label}\n      >\n        Получить токен\n      </a>\n      <TextField\n        id=\"input-token\"\n        label=\"Токен\"\n        variant=\"outlined\"\n        onChange={getToken}\n        value={token}\n      ></TextField>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    token: state.user.token,\n  };\n};\n\nexport default connect(mapStateToProps, { changeToken })(Token);\n","export const changeToken = (token: string) => {\n  return <const>{\n    type: \"[user] Change token\",\n    payload: { token },\n  };\n};\n\nexport const changeName = (name: string) => {\n  return <const>{\n    type: \"[user] Change name\",\n    payload: {\n      name,\n    },\n  };\n};\n\nexport const changeSurname = (surname: string) => {\n  return <const>{\n    type: \"[user] Change surname\",\n    payload: {\n      surname,\n    },\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppStateType } from \"../../store\";\nimport jsonp from \"jsonp\";\nimport { changeSurname, changeName } from \"../../store/user/actions\";\nimport { VERSION } from \"../../consts\";\nimport { Token } from \"../Token\";\n\ntype PropsType = {\n  name: string;\n  surname: string;\n  token: string;\n  changeSurname: typeof changeSurname;\n  changeName: typeof changeName;\n};\n\nconst Account: React.FC<PropsType> = props => {\n  const { token, changeSurname, changeName, name, surname } = props;\n  useEffect(() => {\n    token &&\n      jsonp(\n        `https://api.vk.com/method/account.getProfileInfo?&access_token=${token}&v=${VERSION}`,\n        undefined,\n        (err, data) => {\n          if (err) {\n            console.log(err);\n          } else {\n            changeName(data.response.first_name);\n            changeSurname(data.response.last_name);\n          }\n        },\n      );\n    return () => {};\n  }, [token]);\n\n  return name && surname && token ? (\n    <div>\n      <h1>Аккаунт</h1>\n      <div>{`${name} ${surname}`}</div>\n    </div>\n  ) : (\n    <Token />\n  );\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    token: state.user.token,\n    name: state.user.name,\n    surname: state.user.surname,\n  };\n};\n\nexport default connect(mapStateToProps, { changeSurname, changeName })(Account);\n","import React from \"react\";\nimport { Token } from \"./components/Token\";\nimport Container from \"@material-ui/core/Container\";\nimport { Groups } from \"./components/Groups\";\nimport { SendingForm } from \"./components/SendingForm\";\nimport { Account } from \"./components/Account\";\n\nconst App: React.FC = () => {\n  return (\n    <Container maxWidth=\"xl\">\n      <Account />\n      <Groups />\n      <SendingForm />\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { UserActionsType } from \"./types\";\n\ntype UserType = {\n  name: string;\n  surname: string;\n  token: string;\n};\n\nexport const user = (\n  state: UserType = { name: \"\", surname: \"\", token: '' },\n  action: UserActionsType,\n) => {\n  switch (action.type) {\n    case \"[user] Change name\":\n      return { ...state, name: action.payload.name };\n    case \"[user] Change surname\":\n      return { ...state, surname: action.payload.surname };\n    case \"[user] Change token\":\n      return { ...state, token: action.payload.token };\n    default:\n      return state;\n  }\n};\n","import { StatusActionsType } from \"./types\";\n\ntype StatusType = {\n  success: number[];\n  error: number[];\n};\n\nexport const status = (\n  state: StatusType = { success: [], error: [] },\n  action: StatusActionsType,\n) => {\n  switch (action.type) {\n    case \"[status] Success\":\n      return { ...state, success: [...state.success, action.payload.id] };\n    case \"[status] Error\":\n      return { ...state, error: [...state.error, action.payload.id] };\n    case '[status] Reset all':\n      return { success: [], error: [] }\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\n\nimport { groups } from \"./groups/reducers\";\nimport { user } from \"./user/reducers\";\nimport { status } from \"./status/reducers\";\n\nconst rootReducer = combineReducers({\n  groups,\n  user,\n  status,\n});\n\nexport const store = createStore(\n  rootReducer,\n  // @ts-ignore\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n","import { GroupsActionsType, GroupsType } from \"./types\";\n\nexport const groups = (state: GroupsType = [], action: GroupsActionsType) => {\n  switch (action.type) {\n    case \"[groups] Set groups\":\n      return action.payload.groups;\n    case \"[groups] Toggle group\":\n      return state.map(group =>\n        group.id === action.payload.id\n          ? { ...group, checked: !group.checked }\n          : group,\n      );\n    case \"[groups] Check all groups\":\n      return state.map(group => ({ ...group, checked: true }));\n    case \"[groups] Uncheck all groups\":\n      return state.map(group => ({ ...group, checked: false }));\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}